-*- restructuredtext -*-

################
SOFTWARE ROADMAP
################

Debug a Device
~~~~~~~~~~~~~~
  * manipulate/inspect settings
    * network adapter
      * PDP Context
        * defined, attached, activated, authorized
        * QOS???
      * Socket
      * IP
      * TCPATRUN
        * defined, attached, activated, authorized
      * SMS
        * defined, attached, activated, authorized
      * SIM Toolkit
        * defined, attached, activated, authorized
  * back up settings/configure/restore
  * initialize device
  * generate dummy meter data?
  * python

SMS
~~~

Print a received SMS
--------------------
SMS commands
  * + pg206 config CSCA, CSMP, CSDH, CSCB, CSAS, CRES
  * + pg 218 receiving / reading
    * +CNMI, +CMGL, @CMGL, +CMGR, @CMGR
  * list SMS messages
  * select SMS message
  * 

LIST MESSAGES:
  AT+CMGL // list new messages
  AT+CMGL=status // list messages by status
  AT+CMGL=4

  +CMGL: 1,1,"",25
  099188320580200000F0240490257700001150921265122B0BE8329BFD06DDDF723619

  OK


Send SMS and eval SMSATRUN
~~~~~~~~~~~~~~~~~~~~~~~~~~
pg 377 pre = #

SMSATRUN
SMSATRUNCFG
  set SMSATRUN parameters
SMSATWL - whitelist
  * crud

  * print stored flag from SMSATRUN
    * phone book/at storage/python script


TCPATRUN Hello World
~~~~~~~~~~~~~~~~~~~~
Script to tell the device to connect a port.

  * dump GMI
TCPATRUN
  * auth, firewall, enable
  * multiplexing?

  pg 386


Serverside Daemon
~~~~~~~~~~~~~~~~~
  * Listen on port
  * PUBLIC IP
  * Record device
  * store in persistent backing store

Dispatcher/Dashboard
~~~~~~~~~~~~~~~~~~~~
  * Need a UI to create transparence
    * ruby (rails)
  * need forward dispatching protocol? ATOMPUB?

Meter
~~~~~
  * connect wire to GE865
  * write/read from port?
  * configure server to use LL protocol

  * persistent models
    * indivo?
  * UI
    * ruby (rails)

